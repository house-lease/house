<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bdqn.mapper.ChatListMapper" >
  <resultMap id="BaseResultMap" type="cn.bdqn.domain.ChatList" >
    <id column="id" property="id" jdbcType="INTEGER" />

    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="unread" property="unread" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="send_time_String" property="sendTimeString"/>
    <result column="the_send_user_Id" property="theSendUserId"/>
    <!--用户表关系映射-->
    <association property="sendUser" select="cn.bdqn.mapper.UserMapper.selectByPrimaryKey" column="send_user_id"/>
    <!--用户表关系映射-->
    <association property="receptionUser" select="cn.bdqn.mapper.UserMapper.selectByPrimaryKey" column="reception_user_id"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, send_user_id, reception_user_id, message, send_time, unread, state,send_time_String,the_send_user_Id
  </sql>

<!--  查询会话列表-->
  <select id="selectByChatList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_chat_list
    where ((send_user_id = #{sendUserId}
    AND reception_user_id = #{receptionUserId})
    OR  (send_user_id = #{receptionUserId}
    AND reception_user_id = #{sendUserId})) and state = 0
  </select>

<!-- 查询全部的会话列表-->
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_chat_list
    where ((send_user_id = #{userId})
    OR  (reception_user_id = #{userId})) and state = 0
    ORDER BY send_time desc
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_chat_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_chat_list
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="cn.bdqn.domain.ChatList" >
    insert into t_chat_list (id, send_user_id, reception_user_id, 
      message, send_time, unread, 
      state,send_time_String,the_send_user_Id)
    values (#{id,jdbcType=INTEGER}, #{sendUser.id,jdbcType=INTEGER}, #{receptionUser.id,jdbcType=INTEGER},
      #{message,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, #{unread,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER},#{sendTimeString},#{theSendUserId})
  </insert>


<!--  更新-->
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.domain.ChatList" >
    update t_chat_list
    set send_user_id = #{sendUser.id,jdbcType=INTEGER},
      reception_user_id = #{receptionUser.id,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      unread = #{unread,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      send_time_String = #{sendTimeString},
      the_send_user_Id = #{theSendUserId}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>